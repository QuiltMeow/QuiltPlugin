package ew.quilt.patch;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import ew.quilt.plugin.Main;
import java.util.ArrayList;
import java.util.List;
import org.bukkit.Bukkit;
import org.bukkit.entity.HumanEntity;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.inventory.InventoryCloseEvent;
import org.bukkit.event.player.PlayerPickupItemEvent;
import org.bukkit.inventory.InventoryHolder;

public class Exploit1_12 {

    private static final List<String> AUTO_CRAFTER = new ArrayList<>();

    public static void registerCraftListener() {
        ProtocolLibrary.getProtocolManager().addPacketListener(new PacketAdapter(Main.getPlugin(), ListenerPriority.NORMAL, new PacketType[]{PacketType.Play.Client.AUTO_RECIPE}) {
            @Override
            public void onPacketReceiving(PacketEvent event) {
                Player player = event.getPlayer();
                String name = player.getName();
                if (!AUTO_CRAFTER.contains(name)) {
                    AUTO_CRAFTER.add(name);
                }
            }
        });
    }

    @EventHandler(ignoreCancelled = true)
    public void onItemPickup(final PlayerPickupItemEvent event) {
        Player player = event.getPlayer();
        if (AUTO_CRAFTER.contains(player.getName())) {
            event.setCancelled(true);
        }
    }

    @EventHandler(ignoreCancelled = true)
    public void onInventoryClose(final InventoryCloseEvent event) {
        HumanEntity he = event.getPlayer();
        if (he instanceof Player) {
            Player player = (Player) he;
            String name = player.getName();
            if (AUTO_CRAFTER.contains(name)) {
                AUTO_CRAFTER.remove(name);
            }
        }
    }

    @EventHandler(ignoreCancelled = true)
    public void onDispense(final BlockDispenseEvent event) {
        InventoryHolder dispenser = (InventoryHolder) event.getBlock().getState();
        Bukkit.getScheduler().scheduleSyncDelayedTask(Main.getPlugin(), new Runnable() {
            @Override
            public void run() {
                for (HumanEntity he : dispenser.getInventory().getViewers()) {
                    Player player = (Player) he;
                    player.updateInventory();
                }
            }
        }, 1);
    }
}
